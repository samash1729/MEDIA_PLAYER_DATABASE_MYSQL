
import java.awt.event.MouseEvent;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mahe
 */
public class queries extends javax.swing.JFrame {

    Connection con ;
    java.sql.Statement stmt ;
    DefaultTableModel model ;
     int sta, fin ;
    char[] chr = new char[50];
    public boolean playing = false ;
    public String univ_path = "";
    String[] coll = new String[100];
    int count = -1 ;
    public String final_path = "";
    public int index = 0 ;
    public boolean stopbool = false ;
    public Player player ;
    FileInputStream fis;
    BufferedInputStream bis;
    public long songtotallength;
    public long pauselocation ;
    public String fileloc;
    public boolean finish = false;
    public boolean shuffleon = false ;
    public boolean repeaton = false ;
    String[] playlistfiles = new String[10];
    String path ;
    int play_count = -1 ;
    int i = 0 ;
    /**
     * Creates new form queries
     */
    public queries() {
        initComponents();
  
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song", "Artist", "Album", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
                     jScrollPane1.setViewportView(jTable1);
                    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        butt = new javax.swing.JButton();
        art = new javax.swing.JButton();
        alb = new javax.swing.JButton();
        textnew = new javax.swing.JTextField();
        play = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        resume = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Song", "Artist", "Album", "Address"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        butt.setText("BY SONG");
        butt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttMouseClicked(evt);
            }
        });

        art.setText("BY ARTIST");
        art.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artMouseClicked(evt);
            }
        });

        alb.setText("BY ALBUM");
        alb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albMouseClicked(evt);
            }
        });

        play.setText("PLAY");
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playMouseClicked(evt);
            }
        });

        pause.setText("PAUSE");
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseMouseClicked(evt);
            }
        });

        resume.setText("RESUME");
        resume.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resumeMouseClicked(evt);
            }
        });

        stop.setText("STOP");
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMouseClicked(evt);
            }
        });

        jLabel1.setText("ENTER SEARCH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(butt)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(art)
                                                .addGap(44, 44, 44)
                                                .addComponent(alb))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addComponent(pause)
                                                .addGap(18, 18, 18)
                                                .addComponent(resume)
                                                .addGap(32, 32, 32)
                                                .addComponent(stop))))
                                    .addComponent(play)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(textnew, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(91, 91, 91)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(art)
                    .addComponent(butt)
                    .addComponent(alb))
                .addGap(18, 18, 18)
                .addComponent(textnew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(play)
                    .addComponent(pause)
                    .addComponent(resume)
                    .addComponent(stop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttMouseClicked
       
        {
            
              model = (DefaultTableModel)jTable1.getModel();
              model.setRowCount(0);
                      try {
                
                Class.forName("com.mysql.jdbc.Driver");  
                 con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/dbs?zeroDateTimeBehavior=convertToNull","root","1234");  
 
                 stmt=con.createStatement();
                String val = textnew.getText();
                System.out.println(val);
                String q1;
                String c1,c2,c3,c4;
                q1= "Select * from song where song_name = '"+val+"'";
                ResultSet rs = null ;
                try {
                    rs = stmt.executeQuery(q1);
                } catch (SQLException ex) {
                    Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                while(rs.next())
                {
                    c1 = rs.getString("song_name");
                    c2 = rs.getString("artist_name");
                    c3 = rs.getString("album_name");
                    c4 = rs.getString("address");
                    System.out.println(c1);
                    model.addRow(new Object[]{c1,c2,c3,c4});
                }
                
                rs.close();
                stmt.close();
                con.close();
                
                
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttMouseClicked

    private void artMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artMouseClicked
        
              model = (DefaultTableModel)jTable1.getModel();
              model.setRowCount(0);
                      try {
                
                Class.forName("com.mysql.jdbc.Driver");  
                 con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/dbs?zeroDateTimeBehavior=convertToNull","root","1234");  
 
                 stmt=con.createStatement();
                String val = textnew.getText();
                System.out.println(val);
                String q1;
                String c1,c2,c3,c4;
                q1= "Select * from song where artist_name = '"+val+"'";
                ResultSet rs = null ;
                try {
                    rs = stmt.executeQuery(q1);
                } catch (SQLException ex) {
                    Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                while(rs.next())
                {
                    c1 = rs.getString("song_name");
                    c2 = rs.getString("artist_name");
                    c3 = rs.getString("album_name");
                    c4 = rs.getString("address");
                    System.out.println(c1);
                    model.addRow(new Object[]{c1,c2,c3,c4});
                }
                
                rs.close();
                stmt.close();
                con.close();
                
                
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_artMouseClicked

    private void albMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albMouseClicked
        
              model = (DefaultTableModel)jTable1.getModel();
              model.setRowCount(0);
                      try {
                
                Class.forName("com.mysql.jdbc.Driver");  
                 con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/dbs?zeroDateTimeBehavior=convertToNull","root","1234");  
 
                 stmt=con.createStatement();
                String val = textnew.getText();
                System.out.println(val);
                String q1;
                String c1,c2,c3,c4;
                q1= "Select * from song where album_name = '"+val+"'";
                ResultSet rs = null ;
                try {
                    rs = stmt.executeQuery(q1);
                } catch (SQLException ex) {
                    Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                while(rs.next())
                {
                    c1 = rs.getString("song_name");
                    c2 = rs.getString("artist_name");
                    c3 = rs.getString("album_name");
                    c4 = rs.getString("address");
                    System.out.println(c1);
                    model.addRow(new Object[]{c1,c2,c3,c4});
                }
                
                rs.close();
                stmt.close();
                con.close();
                
                
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_albMouseClicked

    private void playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseClicked
        try {
            playit(path);
        } catch (FileNotFoundException | JavaLayerException ex) {
            Logger.getLogger(queries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_playMouseClicked

    private void pauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseClicked
        pauseit();
    }//GEN-LAST:event_pauseMouseClicked

    private void resumeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resumeMouseClicked
         try {
            fis = new FileInputStream(fileloc);
            bis = new BufferedInputStream(fis);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        try {
            player = new Player(bis);
        } catch (JavaLayerException ex) {
            ex.printStackTrace();
        }
        try {
            fis.skip(songtotallength - pauselocation);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        new Thread()
        {
            public void run()
            {
                try {
                    player.play();
                } catch (JavaLayerException ex) {
                   ex.printStackTrace();
                }
            }
        }.start();
            
        
    
    }//GEN-LAST:event_resumeMouseClicked

    private void stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseClicked
        stopit();        // TODO add your handling code here:
    }//GEN-LAST:event_stopMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int i = jTable1.getSelectedRow();
       path = (String) jTable1.getValueAt(i,3);
       
    }//GEN-LAST:event_jTable1MouseClicked
    
    
    
    
    public void playit(String path) throws FileNotFoundException, JavaLayerException
    {
       
        
        {
            fis = new FileInputStream(path);
            bis = new BufferedInputStream(fis);
            try {
                songtotallength = fis.available();
                fileloc = path+"";
                } catch (IOException ex) {
                ex.printStackTrace();
            }
            player = new Player(bis);
            new Thread()
            {
                public void run()
                {
                
                    
                    if(player!=null)
                    {
                        try {
                            player.play();
                        } catch (JavaLayerException ex) {
                            ex.printStackTrace();
                        }
                                    }
                    else
                    {
                        System.out.println("One Song Already Playing ! ");
                    }
                
                }
            }.start();
        }
       
    }
    
     public void pauseit()
    {
        if(player != null)
        {
            try {
                pauselocation = fis.available();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            player.close();
        }
    }
    public void stopit()
    {
        if(player!=null)
        {
           
            player.close();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(queries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(queries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(queries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(queries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new queries().setVisible(true);
            }
        });
    }
    
    
    
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alb;
    private javax.swing.JButton art;
    private javax.swing.JButton butt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JButton resume;
    private javax.swing.JButton stop;
    private javax.swing.JTextField textnew;
    // End of variables declaration//GEN-END:variables
}
